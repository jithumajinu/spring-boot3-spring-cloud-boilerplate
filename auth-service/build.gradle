plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "6.0.1.5171"
}

group = 'com.openapi.cloud'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//bootRun {
//	environment SPRING_PROFILES_ACTIVE : environment.SPRING_PROFILES_ACTIVE ?: 'local'
//}

//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
////	configureEach {
////		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
////		exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
////	}
//}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
    set('mapstructVersion', "1.5.5.Final")
}

//compileJava.options.encoding = 'UTF-8'
//tasks.withType(JavaCompile).configureEach {
//	options.encoding = 'UTF-8'
//}
//
//javadoc {
//	options.encoding = 'UTF-8'
//}
//
//tasks.withType(JavaCompile).configureEach {
//	enabled = false
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.apache.logging.log4j:log4j-api:2.15.0'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.15.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation('com.google.guava:guava:32.0.1-android')
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.apache.commons:commons-pool2:2.8.0'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    
    // Cache dependencies
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.hazelcast:hazelcast:5.3.6'
    implementation 'com.hazelcast:hazelcast-spring:5.3.6'
    
    // Monitoring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Logging dependencies for ELK
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    runtimeOnly "mysql:mysql-connector-java:8.0.33"
//	runtimeOnly "com.h2database:h2"
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.mapstruct:mapstruct:$mapstructVersion"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


//def printTestCount = { desc, result ->
//	if (!desc.parent) {
//		println "@@ Test Results: ${result.resultType} ($result.testCount} tests, ${result.successfulTestCount} success, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
//	}
//
//}
//
//test {
//	testLogging {
//		events "STARTED", "PASSED", "FAILED", "SKIPPED"
//		afterSuite printTestCount
//	}
//}
